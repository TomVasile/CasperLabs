branches:
  - dev
  - master
  - release-*
  - testing*

# Common parts

# FYI: There's no merging of arrays in YAML. At least not in the Go library
# Drone uses to parse YAML. So if you mix in &sbtenv and want to add
# additional volumes, as in package step, you need to specify all volumes.

__buildenv: &buildenv
  image: casperlabs/buildenv:latest

__sbtenv: &sbtenv
  <<: *buildenv
  environment:
    - _JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G
  volumes:
    - /var/cache/cl-build/.sbt:/root/.sbt
    - /var/cache/cl-build/.ivy2:/root/.ivy2

# Build definition

clone:
  git-clone:
    image: casperlabs/buildenv:latest
    group: clone
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD

  # The following steps labeled as '*-mac' are used to check and compile
  # portions of the pipeline. This method mimics what was suggested in the
  # below articles:
  #    https://discourse.drone.io/t/multiple-build-machines/630/2
  #    https://www.fwd.cloud/commit/post/drone-ios-deployments/
  #
  # The mac server is configured following our Developer.md suggestions
  # for mac users. Please see the Developer.md for specifics.

pipeline:

  # pr

  sbt-update:
    <<: *sbtenv
    commands:
      - sbt update

  compile:
    <<: *sbtenv
    commands:
      - sbt compile test:compile doc

  run-unit-tests:
    <<: *sbtenv
    group: test
    secrets: [ cc_token ]
    commands:
      - sbt coverage test coverageReport
      - codecov -t $CC_TOKEN

#  codecove-report:
#    <<: *sbtenv
#    secrets: [ cc_token ]
#    commands:
#      - sbt coverageReport
#      - codecov -t $CC_TOKEN
