---

#NOTE: Leaving these here to try again eventually. The Yaml library drone 1.1.0
# uses has a bug with how it handles these anchors. Workaround is to be more
# verbose in the steps.

__buildenv:
  image: "casperlabs/buildenv:latest"

__sbtenv:
  environment:
    - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
  image: "casperlabs/buildenv:latest"
  volumes:
    - "/var/cache/cl-build/.sbt:/root/.sbt"
    - "/var/cache/cl-build/.ivy2:/root/.ivy2"

branches:
  - dev
  - master
  - release-*
  - testing*
  - trying
  - staging

# Begin
clone:
  git-clone:
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD
      exit 1
    image: "casperlabs/buildenv:latest"

#NOTE: 1. Had to remove cached .sbt/.ivy2 dirs for drone autoscaling. This is because
# drone uses docker bind mounts which do not create the host dir if it is nonexistent,
# resulting in Error response from daemon: invalid mount config for type "bind":
# bind source path does not exist: /var/cache/cl-build/.sbt
#      2. Groups were replaced for a new depends_on feature in 1.*. These do not behave
# exactly the same.
pipeline:

  sbt-update:
    commands:
      - "sbt update"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"

  compile:
    commands:
      - "sbt compile test:compile doc"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"

  git-status-post-scala-compile:
    commands: |
      STATUS_CHECK=$(git status)
      if echo $STATUS_CHECK | grep -q "modified" ; then echo "$STATUS_CHECK"; exit 1; fi
    image: "casperlabs/buildenv:latest"

  compile-rust:
    commands:
      - "cd execution-engine/"
      - "~/.cargo/bin/cargo update"
      - "~/.cargo/bin/cargo build"
    image: "casperlabs/buildenv:latest"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"

  run-cargo-fmt:
    commands:
      - "cd execution-engine"
      - "~/.cargo/bin/rustup toolchain install $(cat rust-toolchain)"
      - "~/.cargo/bin/rustup component add --toolchain=$(cat rust-toolchain) rustfmt"
      - "~/.cargo/bin/cargo fmt --all -- --check"
    image: "casperlabs/buildenv:latest"

  run-rust-lints:
    commands:
      - "cd execution-engine"
      - "~/.cargo/bin/rustup toolchain install $(cat rust-toolchain)"
      - "~/.cargo/bin/rustup component add --toolchain=$(cat rust-toolchain) clippy"
      - "~/.cargo/bin/cargo clippy --all-targets --all -- -D warnings -A renamed_and_removed_lints"
    image: "casperlabs/buildenv:latest"

  run-rust-tests:
    commands:
      - "cd execution-engine/"
      - "~/.cargo/bin/cargo test"
    image: "casperlabs/buildenv:latest"

  run-unit-tests:
    commands:
      - "sbt test"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"

# This section of the Pipeline is variable and not always run in all situations.

  try-cargo-publish:
    commands:
      - "cd execution-engine/common"
      - "~/.cargo/bin/cargo publish --dry-run"
    image: "casperlabs/buildenv:latest"
    when:
      branch:
        - staging
        - trying

  run-rust-benchmarks:
    commands:
      - "cd execution-engine/"
      - "~/.cargo/bin/cargo bench"
    image: "casperlabs/buildenv:latest"
    when:
      branch:
        - staging
        - trying

  docker-build-artifacts-bors:
    commands:
      - "sbt node/docker:publishLocal client/docker:publishLocal"
      - "export DOCKER_LATEST_TAG=DRONE-${DRONE_BUILD_NUMBER}"
      - "make docker-build/execution-engine"
      - "make docker-build/integration-testing"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    when:
      branch:
        - staging
        - trying

  docker-build-artifacts-merge:
    commands:
      - "sbt node/docker:publishLocal client/docker:publishLocal"
      - "export DOCKER_LATEST_TAG=DRONE-${DRONE_BUILD_NUMBER}"
      - "make docker-build/execution-engine"
      - "make docker-build/integration-testing"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  run-integration-tests:
    commands:
      - "python3 -m pip install pipenv dataclasses typing_extensions"
      - "cd integration-testing"
      - ./docker_run_tests.sh
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/tmp:/tmp"
    when:
      branch:
        - staging
        - trying

  package-client-deb-universal:
    commands:
      - "sbt client/debian:packageBin client/universal:packageZipTarball"
      - "mkdir -p artifacts/${DRONE_BRANCH}"
      - "cp client/target/casperlabs-client_*_all.deb client/target/universal/*.tgz artifacts/${DRONE_BRANCH}"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  package-client-rpm:
    commands:
      - "env JAVAC_VERSION=1.8 sbt clean compile doc client/rpm:packageBin"
      - "mkdir -p artifacts/${DRONE_BRANCH}"
      - "cp client/target/rpm/RPMS/noarch/casperlabs-client-*.noarch.rpm artifacts/${DRONE_BRANCH}"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  package-node-deb-universal:
    commands:
      - "sbt node/debian:packageBin node/universal:packageZipTarball"
      - "mkdir -p artifacts/${DRONE_BRANCH}"
      - "cp node/target/casperlabs-node_*_all.deb node/target/universal/*.tgz artifacts/${DRONE_BRANCH}"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  package-node-rpm:
    commands:
      - "env JAVAC_VERSION=1.8 sbt clean compile doc node/rpm:packageBin"
      - "mkdir -p artifacts/${DRONE_BRANCH}"
      - "cp node/target/rpm/RPMS/noarch/casperlabs-node-*.noarch.rpm artifacts/${DRONE_BRANCH}"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  package-ee:
    commands:
      - "mkdir -p artifacts/${DRONE_BRANCH}"
      - "make cargo-package-all"
      - "cp execution-engine/target/debian/casperlabs-engine-grpc-server_*.deb artifacts/${DRONE_BRANCH}"
      - "cp execution-engine/target/release/rpmbuild/RPMS/x86_64/casperlabs-engine-grpc-server-*.rpm artifacts/${DRONE_BRANCH}"
      - "WORKING_DIR=$(pwd) ; cd execution-engine/target/release/rpmbuild/SOURCES ; OS=$(uname -s | tr '[:upper:]' '[:lower:]') ; ARCH=$(uname -p) ; SOURCE=$(ls casperlabs-engine-grpc-server-*.tar.gz | sed \"s/.tar.gz//\") ; TARGET=$(ls $SOURCE*.tar.gz | sed \"s/.tar.gz/_\"$OS\"_\"$ARCH\".tar.gz/\") ; tar -xzf $SOURCE.tar.gz ; tar -czf $TARGET -C $SOURCE/usr/bin/ . && cp $TARGET $WORKING_DIR/artifacts/${DRONE_BRANCH}"
    image: "casperlabs/buildenv:latest"
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  rsync-artifacts:
    delete: true
    hosts:
      - $REPO_HOST
    image: drillster/drone-rsync
    recursive: true
    secrets:
      - repo_host
      - rsync_user
      - rsync_key
      - repo_path
    source: "artifacts/${DRONE_BRANCH}"
    target: $REPO_PATH/
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  github_publish_release_artifacts:
    checksum:
      - sha256
      - md5
    files:
      - "artifacts/${DRONE_BRANCH}/*"
    image: plugins/github-release
    prerelease: true
    secrets:
      - github_token
    when:
      branch: master
      event: tag

  docker-publish:
    commands: |
      echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      if [ ! -z ${DRONE_TAG} ]; then
        REF=${DRONE_TAG}
      else
        REF=${DRONE_BRANCH}
      fi
      docker tag casperlabs/node:DRONE-${DRONE_BUILD_NUMBER} casperlabs/node:"$REF"
      docker tag casperlabs/client:DRONE-${DRONE_BUILD_NUMBER} casperlabs/client:"$REF"
      docker tag casperlabs/execution-engine:DRONE-${DRONE_BUILD_NUMBER} casperlabs/execution-engine:"$REF"
      docker push casperlabs/node:"$REF"
      docker push casperlabs/client:"$REF"
      docker push casperlabs/execution-engine:"$REF"
      if [ "${DRONE_BRANCH}" = "master" ]; then
        docker tag casperlabs/node:DRONE-${DRONE_BUILD_NUMBER} casperlabs/node:latest
        docker tag casperlabs/client:DRONE-${DRONE_BUILD_NUMBER} casperlabs/client:latest
        docker tag casperlabs/execution-engine:DRONE-${DRONE_BUILD_NUMBER} casperlabs/execution-engine:latest
        docker push casperlabs/node:latest
        docker push casperlabs/client:latest
        docker push casperlabs/execution-engine:latest
      fi
      echo "done"
    image: "casperlabs/buildenv:latest"
    secrets:
      - docker_username
      - docker_password
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  contract-examples:
    fork: true
    image: plugins/downstream
    repositories:
      - CasperLabs/contract-examples@master
    secrets:
      - downstream_token
      - downstream_server
    when:
      branch:
        - dev
        - release-*
        - master
      event:
        - push
        - tag

  cleanup:
    commands:
      - "docker images --filter \"dangling=true\" -q --no-trunc | xargs --no-run-if-empty docker rmi -f || true"
      - "docker images | grep \"DRONE-${DRONE_BUILD_NUMBER}\" | awk '{print $3}' | xargs --no-run-if-empty docker rmi -f || true"
    environment:
      - "_JAVA_OPTIONS=-Xms2G -Xmx4G -XX:MaxMetaspaceSize=1G"
    image: "casperlabs/buildenv:latest"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    when:
      status:
        - failure
        - success

  notify:
    channel: alerts
    image: plugins/slack
    secrets:
      - slack_webhook
    template: >
      *{{ uppercasefirst build.status }}*
        Author: {{ build.author }} 
        Drone Build: <{{ build.link }}>|#{{ build.number }}>
        Commit: <${DRONE_COMMIT_LINK}>
    when:
      status:
        - failure

# Signature for Drone
---
kind: signature
hmac: aba74ddcedb4ac74f39f8884cd644c6f13eb4ed7f7226c7b9fefda17d0241af2

...
