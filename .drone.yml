---

#NOTE: Leaving these here to try again eventually. The Yaml library drone 1.1.0
# uses has a bug with how it handles these anchors. Workaround is to be more
# verbose in the steps.
#
#__buildenv:
#  image: "casperlabs/buildenv:latest"
#
#__sbtenv:
#  environment:
#    - "_JAVA_OPTIONS=-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
#  image: "casperlabs/buildenv:latest"
#  volumes:
#    - "/var/cache/cl-build/.sbt:/root/.sbt"
#    - "/var/cache/cl-build/.ivy2:/root/.ivy2"

# Begin
#clone:
#  git-clone:
#    commands: |
#      set -ex
#      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
#      if [ x$DRONE_PULL_REQUEST != x ]; then
#          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
#          EMAIL=ci git merge --no-edit FETCH_HEAD
#      fi
#      git rev-parse HEAD
#    image: "casperlabs/buildenv:latest"

#NOTE: 1. Had to remove cached .sbt/.ivy2 dirs for drone autoscaling. This is because
# drone uses docker bind mounts which do not create the host dir if it is nonexistent,
# resulting in Error response from daemon: invalid mount config for type "bind":
# bind source path does not exist: /var/cache/cl-build/.sbt
kind: pipeline
name: run

clone:
  git-clone:
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD
    image: "casperlabs/buildenv:latest"

steps:
# Below is for pull_request webhooks only
- name: sbt-compile-test-pr
  commands:
  - "exit 0"
  environment:
    _JAVA_OPTIONS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
  image: "casperlabs/buildenv:latest"
  when:
    event:
    - pull_request

volumes:
- name: docker_sock
  host:
    path: "/var/run/docker.sock"
- name: temp
  host:
    path: "/tmp"

trigger:
  branch:
  - dev
  - master
  - "release-*"
  - "testing*"
  - trying
  - staging

---
kind: pipeline
name: cleanup

steps:
- name: cleanup-docker-images
  commands:
  - "docker images --filter \"dangling=true\" -q --no-trunc | xargs --no-run-if-empty docker rmi -f || true"
  - "docker images | grep \"DRONE-${DRONE_BUILD_NUMBER}\" | awk '{print $3}' | xargs --no-run-if-empty docker rmi -f || true"
  environment:
    _JAVA_OPTIONS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
  image: "casperlabs/buildenv:latest"
  volumes:
  - name: docker_sock	
    path: "/var/run/docker.sock"

volumes:
- name: docker_sock
  host:
    path: "/var/run/docker.sock"

trigger:
  status:
  - failure
  - success
  branch:
  - dev
  - master
  - "release-*"
  - "testing*"
  - trying
  - staging

depends_on:
- run

---
kind: pipeline
name: notify

steps:
- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    channel: alerts
    template: 
    - |
      *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>

volumes:
- name: docker_sock
  host:
    path: "/var/run/docker.sock"

trigger:
  status:
  - failure
  branch:
  - dev
  - master
  - "release-*"
  - "testing*"
  - trying
  - staging

depends_on:
- run

# Signature for Drone
---
kind: signature
hmac: aba74ddcedb4ac74f39f8884cd644c6f13eb4ed7f7226c7b9fefda17d0241af2

...
