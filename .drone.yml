---

#NOTE: Leaving these here to try again eventually. The Yaml library drone 1.1.0
# uses has a bug with how it handles these anchors. Workaround is to be more
# verbose in the steps.
#
#__buildenv:
#  image: "casperlabs/buildenv:latest"
#
#__sbtenv:
#  environment:
#    - "_JAVA_OPTIONS=-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
#  image: "casperlabs/buildenv:latest"
#  volumes:
#    - "/var/cache/cl-build/.sbt:/root/.sbt"
#    - "/var/cache/cl-build/.ivy2:/root/.ivy2"
#
branches:
  - dev
  - master
  - release-*
  - testing*
  - trying
  - staging

# Begin
clone:
  git-clone:
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD
    image: "casperlabs/buildenv:latest"

#NOTE: 1. Had to remove cached .sbt/.ivy2 dirs for drone autoscaling. This is because
# drone uses docker bind mounts which do not create the host dir if it is nonexistent,
# resulting in Error response from daemon: invalid mount config for type "bind":
# bind source path does not exist: /var/cache/cl-build/.sbt
#      2. Groups were replaced for a new depends_on feature in 1.*. These do not behave
# exactly the same.
kind: pipeline
steps:
# Below is for pull_request webhooks only
- name: sbt-compile-test-pr
  commands:
  - "sbt test"
  environment:
  _JAVA_OPTIONS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
  image: "casperlabs/buildenv:latest"
  when:
    event:
    - pull_request

- name: git-status-post-scala-compile-pr
  commands: |
    STATUS_CHECK=$(git status)
    if echo $STATUS_CHECK | grep -q "modified" ; then echo "$STATUS_CHECK"; exit 1; fi
  image: "casperlabs/buildenv:latest"
  when:
    event:
    - pull_request
  depends_on:
  - sbt-compile-test-pr

- name: rust-compile-test-pr
  commands:
  - "cd execution-engine/"
  - "~/.cargo/bin/cargo --locked build"
  - "~/.cargo/bin/cargo --locked test"
  - "./scripts/run-contract-tests.sh"
  - "cd ../long-running-tests"
  - "./build-contracts.sh"
  image: "casperlabs/buildenv:latest"
  when:
    event:
    - pull_request

- name: run-cargo-fmt-pr
  commands:
  - "cd execution-engine"
  - "~/.cargo/bin/rustup toolchain install $(cat rust-toolchain)"
  - "~/.cargo/bin/rustup component add --toolchain=$(cat rust-toolchain) rustfmt"
  - "~/.cargo/bin/cargo fmt --all -- --check"
  image: "casperlabs/buildenv:latest"
  when:
    event:
    - pull_request
  depends_on:
  - rust-compile-test-pr

- name: run-rust-lints-pr
  commands:
  - "cd execution-engine"
  - "~/.cargo/bin/rustup toolchain install $(cat rust-toolchain)"
  - "~/.cargo/bin/rustup component add --toolchain=$(cat rust-toolchain) clippy"
  - "~/.cargo/bin/cargo clippy --all-targets --all -- -D warnings -A renamed_and_removed_lints"
  image: "casperlabs/buildenv:latest"
  when:
    event:
    - pull_request
  depends_on:
  - rust-compile-test-pr

- name: cleanup
  commands:
  - "docker images --filter \"dangling=true\" -q --no-trunc | xargs --no-run-if-empty docker rmi -f || true"
  - "docker images | grep \"DRONE-${DRONE_BUILD_NUMBER}\" | awk '{print $3}' | xargs --no-run-if-empty docker rmi -f || true"
  environment:
  _JAVA_OPTIONS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
  image: "casperlabs/buildenv:latest"
  volumes:
  - name: docker_sock	
    path: "/var/run/docker.sock"
  when:
    status:
    - failure
    - success

- name: notify
  channel: alerts
  image: plugins/slack
  secrets:
  - slack_webhook
  template: |
    *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
  when:
    status:
    - failure

# Signature for Drone
---
kind: signature
hmac: aba74ddcedb4ac74f39f8884cd644c6f13eb4ed7f7226c7b9fefda17d0241af2

...
